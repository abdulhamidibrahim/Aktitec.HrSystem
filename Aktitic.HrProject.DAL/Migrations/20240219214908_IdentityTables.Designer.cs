// <auto-generated />
using System;
using Aktitic.HrProject.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aktitic.HrProject.DAL.Migrations
{
    [DbContext(typeof(HrManagementDbContext))]
    [Migration("20240219214908_IdentityTables")]
    partial class IdentityTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly?>("Break")
                        .HasColumnType("time")
                        .HasColumnName("break");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int?>("OvertimeId")
                        .HasColumnType("int")
                        .HasColumnName("overtime_id");

                    b.Property<TimeOnly?>("Production")
                        .HasColumnType("time")
                        .HasColumnName("production");

                    b.Property<DateTime?>("PunchIn")
                        .HasColumnType("datetime")
                        .HasColumnName("punch_in");

                    b.Property<DateTime?>("PunchOut")
                        .HasColumnType("datetime")
                        .HasColumnName("punch_out");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OvertimeId");

                    b.ToTable("Attendance", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Department", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Designation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<int?>("Name")
                        .HasColumnType("int")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Designation", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("content");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("extension");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("File", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Holiday", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Leaves", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit")
                        .HasColumnName("approved");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("approvedBy");

                    b.Property<short?>("Days")
                        .HasColumnType("smallint")
                        .HasColumnName("days");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from");

                    b.Property<string>("Reason")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("reason");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeId");

                    b.ToTable("leaves", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Overtime", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("approvedBy");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<DateOnly?>("OtDate")
                        .HasColumnType("date")
                        .HasColumnName("ot_date");

                    b.Property<byte?>("OtHours")
                        .HasColumnType("tinyint")
                        .HasColumnName("ot_hours");

                    b.Property<string>("OtType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ot_type");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Overtimes", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Scheduling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("approvedBy");

                    b.Property<TimeOnly?>("BreakTime")
                        .HasColumnType("time")
                        .HasColumnName("break_time");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_Id");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<TimeOnly?>("MaxEndTime")
                        .HasColumnType("time")
                        .HasColumnName("max_end_time");

                    b.Property<TimeOnly?>("MaxStartTime")
                        .HasColumnType("time")
                        .HasColumnName("max_start_time");

                    b.Property<TimeOnly?>("MinEndTime")
                        .HasColumnType("time")
                        .HasColumnName("min_end_time");

                    b.Property<TimeOnly?>("MinStartTime")
                        .HasColumnType("time")
                        .HasColumnName("min_start_time");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note");

                    b.Property<short?>("RepeatEvery")
                        .HasColumnType("smallint")
                        .HasColumnName("repeat_every");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int")
                        .HasColumnName("shift_id");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("scheduling", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int")
                        .HasColumnName("approvedBy");

                    b.Property<TimeOnly?>("BreakeTime")
                        .HasColumnType("time")
                        .HasColumnName("breake_time");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<bool?>("Indefinate")
                        .HasColumnType("bit")
                        .HasColumnName("indefinate");

                    b.Property<TimeOnly?>("MaxEndTime")
                        .HasColumnType("time")
                        .HasColumnName("max_end_time");

                    b.Property<TimeOnly?>("MaxStartTime")
                        .HasColumnType("time")
                        .HasColumnName("max_start_time");

                    b.Property<TimeOnly?>("MinEndTime")
                        .HasColumnType("time")
                        .HasColumnName("min_end_time");

                    b.Property<TimeOnly?>("MinStartTime")
                        .HasColumnType("time")
                        .HasColumnName("min_start_time");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("note");

                    b.Property<bool?>("RecurringShift")
                        .HasColumnType("bit")
                        .HasColumnName("recurring_shift");

                    b.Property<short?>("RepeatEvery")
                        .HasColumnType("smallint")
                        .HasColumnName("repeat_every");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("Tag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.ToTable("Shift", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<short?>("AssignedHours")
                        .HasColumnType("smallint")
                        .HasColumnName("assigned_hours");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("deadline");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<short?>("Hours")
                        .HasColumnType("smallint")
                        .HasColumnName("hours");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.HasKey("Id");

                    b.ToTable("Timesheet", "employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Employee", b =>
                {
                    b.HasBaseType("Aktitic.HrProject.DAL.Models.ApplicationUser");

                    b.Property<byte?>("Age")
                        .HasColumnType("tinyint")
                        .HasColumnName("age");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<int?>("ImgId")
                        .HasColumnType("int")
                        .HasColumnName("img_id");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("job_position");

                    b.Property<DateOnly?>("JoiningDate")
                        .HasColumnType("date")
                        .HasColumnName("joining_date");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("manager_id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("salary");

                    b.Property<byte?>("YearsOfExperience")
                        .HasColumnType("tinyint")
                        .HasColumnName("years_of_experience");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ImgId");

                    b.ToTable("Employee", "employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Attendance", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Attendance_Employee");

                    b.HasOne("Aktitic.HrProject.DAL.Models.Overtime", "Overtime")
                        .WithMany("Attendances")
                        .HasForeignKey("OvertimeId")
                        .HasConstraintName("FK_Attendance_Overtimes");

                    b.Navigation("Employee");

                    b.Navigation("Overtime");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Designation", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Department", "Department")
                        .WithMany("Designations")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Designation_Department");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Leaves", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "ApprovedByNavigation")
                        .WithMany("LeafApprovedByNavigations")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK_leaves_Employee_approved");

                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "Employee")
                        .WithMany("LeafEmployees")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_leaves_Employee");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Overtime", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "ApprovedByNavigation")
                        .WithMany("OvertimeApprovedByNavigations")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK_Overtimes_Employee_approve");

                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "Employee")
                        .WithMany("OvertimeEmployees")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Overtimes_Employee");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Scheduling", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "ApprovedByNavigation")
                        .WithMany("SchedulingApprovedByNavigations")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK_scheduling_Employee_2");

                    b.HasOne("Aktitic.HrProject.DAL.Models.Department", "Department")
                        .WithMany("Schedulings")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_scheduling_Department");

                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "Employee")
                        .WithMany("SchedulingEmployees")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_scheduling_Employee_1");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Shift", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "ApprovedByNavigation")
                        .WithMany("Shifts")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK_Shift_Employee");

                    b.Navigation("ApprovedByNavigation");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Timesheet", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Employee", "IdNavigation")
                        .WithOne("Timesheet")
                        .HasForeignKey("Aktitic.HrProject.DAL.Models.Timesheet", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_Timesheet_Employee");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Employee", b =>
                {
                    b.HasOne("Aktitic.HrProject.DAL.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employee_Department_1");

                    b.HasOne("Aktitic.HrProject.DAL.Models.ApplicationUser", null)
                        .WithOne()
                        .HasForeignKey("Aktitic.HrProject.DAL.Models.Employee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aktitic.HrProject.DAL.Models.File", "Img")
                        .WithMany("Employees")
                        .HasForeignKey("ImgId")
                        .HasConstraintName("FK_Employee_File_1");

                    b.Navigation("Department");

                    b.Navigation("Img");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Department", b =>
                {
                    b.Navigation("Designations");

                    b.Navigation("Employees");

                    b.Navigation("Schedulings");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.File", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Overtime", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("Aktitic.HrProject.DAL.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("LeafApprovedByNavigations");

                    b.Navigation("LeafEmployees");

                    b.Navigation("OvertimeApprovedByNavigations");

                    b.Navigation("OvertimeEmployees");

                    b.Navigation("SchedulingApprovedByNavigations");

                    b.Navigation("SchedulingEmployees");

                    b.Navigation("Shifts");

                    b.Navigation("Timesheet");
                });
#pragma warning restore 612, 618
        }
    }
}
